'''
Instructions from your teacher:
Students will finish up existing programs.
Review for the test by writing this program:

A user must change their password. They must 
create a new password.  They cannot re-use a 
password. The password must contain at least 6 
characters and one must be capitalized, at least 
2 numbers and at least one special character.

lstUsedPasswords=["abcdeF!23","zxcbhK#44","poiuyT&11"]
lstLowerCase=["a-z"]
lstUpperCase=["A-Z"]
lstNumbers=[0-9]
lstSpecial=["!","@","#","$","%","^","&","*","(",")"]

'''

import colorama
from colorama import Fore 
import string
import re
acceptpass = False 
acceptpass = True
invalidChars = set

#This checks to see if the password has numbers
def hasNumbers(password):
  return any(char.isdigit() for char in password)
  
#THis checks to see if the password has any alpha characters.
def hasChar(password):
  return any(char.isalpha() for char in password)

def error_checklist():
  print(Fore.RED + "Error Checklist:")

  error_checklist_1 = (Fore.MAGENTA +  "Passwords do not match!")
  error_checklist_2 = (Fore.MAGENTA + "You need lettters")
  error_checklist_3 = (Fore.MAGENTA + "You need at least 6 letters!")
  error_checklist_4 = (Fore.MAGENTA + "You need uppercase and lowercase letters!")
  error_checklist_5 = (Fore.MAGENTA + "You need digits!")
  error_checklist_6 = (Fore.MAGENTA +  "You need more than two digits!")
  error_checklist_7 = (Fore.MAGENTA +  "You can't reuse a password!")

  cyan_error_chklist_num1 = (Fore.CYAN + "1)")
  cyan_error_chklist_num2 = (Fore.CYAN + "\n2)")
  cyan_error_chklist_num3 = (Fore.CYAN + "\n3)")
  cyan_error_chklist_num4 = (Fore.CYAN + "\n4)")
  cyan_error_chklist_num5 = (Fore.CYAN + "\n5)")
  cyan_error_chklist_num6 = (Fore.CYAN + "\n6)")
  cyan_error_chklist_num7 = (Fore.CYAN + "\n7)")
    
  example_4_chklist_1 = (Fore.WHITE + " \nUSE: Example12! USE: Pemdas21!\n")
  example_4_chklist_2 = (Fore.WHITE + " \nUSE: 12!\n")
  example_4_chklist_3 = (Fore.WHITE + " \nUSE: Apple00$\n")
  example_4_chklist_4 = (Fore.WHITE + " \nUSE: HELUIM2@ OR USE: heluim2@\n")
  example_4_chklist_5 = (Fore.WHITE + " \nUSE: Example!\n")
  example_4_chklist_6 = (Fore.WHITE + " \nUSE: Numbers1@\n")
  example_4_chklist_7 = (Fore.WHITE + " \nUSE: abcdeF!23 OR zxcbhK#44 OR poiuyT&11\n")
  print(Fore.CYAN + cyan_error_chklist_num1 + error_checklist_1 + example_4_chklist_1 + cyan_error_chklist_num2 + error_checklist_2 + example_4_chklist_2 + cyan_error_chklist_num3 + error_checklist_3 + example_4_chklist_3 + cyan_error_chklist_num4 + error_checklist_4 + example_4_chklist_4 + cyan_error_chklist_num5 + error_checklist_5 + example_4_chklist_5 + cyan_error_chklist_num6 + error_checklist_6 + example_4_chklist_6 + cyan_error_chklist_num7 + error_checklist_7 + example_4_chklist_7)

#This is where the password function starts.
def passsword():
  


  print(" ")
  print(Fore.WHITE + "==================================================================\nSCROLL UP FOR ERROR CHECKLIST!!!!")
  print(Fore.YELLOW+"Password")
  print(Fore.RED+"Your password Must contain:\n1. At least 2 digits and 6 alpha characters\n2. Has lower case and upper case letters.\n3. Has numbers and letters.\n4. Has 1 Special characters\n5. Must not match any used passwords")
  
  print(Fore.CYAN+"Password:")
  
  first = input(Fore.WHITE+"")

  print(Fore.CYAN+"Enter password again:")

  recheck_first = input(Fore.WHITE + " ")
  
  
  def funPass():  
    lstSpecial= ("[@_!#$%^&*()<>?/\|}{~:]")

    numbers = ['0','1','2','3','4','5','6','7','8','9']

    invalidChars = set(string.punctuation.replace("_", ""))

    lstUsedPasswords=["abcdeF!23","zxcbhK#44","poiuyT&11"]

    regex = re.compile(lstSpecial)

  #This is to check for how many numbers and letters are in th epassword
    d=0

    l=0
    for c in first:
        if c.isdigit():
            d=d+1
        elif c.isalpha():
            l=l+1
        else:
            pass




    
    if hasChar(first and recheck_first) == False:
        print(Fore.RED + "You need letters!")
        passsword()
    
    #checks to see if you have more than six letters.
    elif l < 6:
          print(Fore.RED + "You need at least 6 letters!")
          passsword()

    #This elif statement tells me that I need upper and lower case letters.
    elif first.isupper() and recheck_first.isupper() or first.islower() and recheck_first.islower():
          print(Fore.RED + "You need upper and lower case letters. ")
          passsword()

    #Checks to see if you have any digits
    elif hasNumbers(first and recheck_first) == False:
          print(Fore.RED + "You need digits")
          passsword()

    #Checks to see if you have more than two digits
    elif d < 2:
      print(Fore.RED + "You need more than two digits!")
      passsword()

    #Checks to see if you have any special characters
    elif (regex.search(first) == None):
      print("You need special characters!")
      passsword()

    #Tells you that you can not reuse the password in the lstUsedPasswords fuction
    elif any(passs.lower() == first.lower() for passs in lstUsedPasswords): 
      print("You can't reuse a password!")
      passsword()
      
    #If the passwords equal each other,
    #then this will check to see how strong the password is.
    elif first == recheck_first:
      if acceptpass == True:
            
            #if the length of the password is less than nine then
            #it is a weak password.
            if len(first and recheck_first) <= 9:
              print(Fore.RED + "\nWeak Strength")
              print(Fore.MAGENTA + "Passwords Match!")
              
              #this definition asks if you would like
              #to retype a new password since
              #it isn't a strong one.  ONLY
              #the weak and meduim Passwords
              #will have this definition
              def ask_retype_weakpass():
                reask_weakpass = input(Fore.WHITE+"\nWould you like to retype the password since it is weak?(Type yes or no)").lower()
                if reask_weakpass == 'yes'.lower():
                  print(Fore.WHITE + "==================================================================")
                  passsword()
                elif reask_weakpass == 'no'.lower():
                  print(Fore.WHITE + "==================================================================")
                else:
                  print(Fore.RED+"Invalid Input!")
                  ask_retype_weakpass()
              ask_retype_weakpass()
                
            #IF the password is greater than nine and less than 15
            #then it is a meduim strengthed password.
            elif len(first and recheck_first) > 9 and len(first and recheck_first) < 15:
              print(Fore.YELLOW + "\nMedium Strength")
              print(Fore.MAGENTA + "Passwords Match!")
              
              #this definition asks if you would like
              #to retype a new password since
              #it isn't a strong one.  ONLY
              #the weak and meduim Passwords
              #will have this definition
              def ask_retype_meduimpass():
                reask_meduimpass = input(Fore.WHITE+"\nWould you like to retype the password since it is Meduim?(Type yes or no)").lower()
                if reask_meduimpass == 'yes'.lower():
                  print(Fore.WHITE + "==================================================================")
                  passsword()
                elif reask_meduimpass == 'no'.lower():
                  print(Fore.WHITE + "==================================================================")
                else:
                  print(Fore.RED+"Invalid Input!")
                  ask_retype_meduimpass()
              ask_retype_meduimpass()
                
                #If the password is greater or equal
                #to fifteen then it is a strong password
            elif len(first and recheck_first) >= 15:
              print(Fore.GREEN+"\nStrong Password")
              print(Fore.MAGENTA+"\nPasswords Match!")
              print(Fore.WHITE + "==================================================================")
    else:
      print(Fore.RED + "Passwords do not match!!! Please retype your password")
      print(Fore.WHITE + "==================================================================")
      passsword()
      
  funPass()




def control_center():
  error_checklist()

  passsword()
control_center()
