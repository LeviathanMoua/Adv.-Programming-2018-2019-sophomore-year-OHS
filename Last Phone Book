'''
Instructions from your teacher:
Using Access or sqlite3, create a phone book with the following interface.
You have the basic CRUD (Create, Read, Update,Delete) features, as well as,
navigation buttons.

#Image Example: https://storage.googleapis.com/replit/images/1554483875626_636f880fdf12efa26cde0bd1054dfeeb.jpe
'''

import tkinter as tki
from tkinter import *
import sqlite3




conn = sqlite3.connect('dbPhoneBookWKSHT.db')
c=conn.cursor()
c.execute("CREATE TABLE IF NOT EXISTS tblPhone(firstName CHAR(20), lastName CHAR(30),eMail TEXT,phoneNumber TEXT)")

window = Tk()
window.title('Phone Book')
window.geometry('750x400')
window.configure(background='black')
toolbar=Frame(window,bg='yellow')
toolbar.pack(side=TOP,fill=X)

equation = StringVar()
expression = ""

lblProgramTitle=tki.Label(text="Phoneboook",fg='white',bg='black',font=('Times New Roman',30))
lblProgramTitle.place(x=320,y=10)   

lblMyName=tki.Label(text="Justin Moua\nJackson\nAdv. Programming\n4th Hr.",fg='white',bg='black',font=('Times New Roman',10))
lblMyName.place(x=150,y=10)        

EditWhatLabel=tki.Label(text="Now edit what you'd like",fg='white',bg='black',font=('Times New Roman',16))
def fnClearEntryBoxes():
    TellToFindLabel.place_forget()    
    entryFirstName.delete(0,END)
    entryLastName.delete(0,END)
    entryEmail.delete(0,END)
    entryPhoneNumber.delete(0,END)
#===========ADD FUNCTION==========
def fnAdd():
    TellToFindLabel.place_forget()
    entries()
    fnClearEntryBoxes()
    if removeTellToFindLabel == True:
        EditWhatLabel.place_forget()
    #Create an if function to check if the information is already associated
    #with the phone number


    btnSave=tki.Button(window,text='Save', height = 4, width = 15, command = lambda:add_into_db())
    btnSave.place(x=20,y=320)
  
    def add_into_db():

        
        strFirstName = entryFirstName.get()
        strLastName = entryLastName.get()
        strEmail = entryEmail.get()
        strPhoneNumber = entryPhoneNumber.get()

        print(strFirstName)
        print(strLastName)
        print(strEmail)
        print(strPhoneNumber)

        #Add these into the database.
        c.execute("INSERT INTO tblPhone(firstName, lastName,eMail,phoneNumber) VALUES(:firstName, :lastName, :eMail, :phoneNumber)",
                  {"firstName":strFirstName,"lastName":strLastName,"eMail":strEmail,"phoneNumber":strPhoneNumber})
        conn.commit()

#======DELETE FUNCTION=====
def fnDelete():
    TellToFindLabel.place_forget()
    entries()
    fnClearEntryBoxes()
    if removeTellToFindLabel == True:
        EditWhatLabel.place_forget()    
    btnSave=tki.Button(window,text='Confirm', height = 4, width = 15, command = lambda:delete_from_db())
    btnSave.place(x=20,y=320)

    def delete_from_db():
        global strPhoneNumber
        strPhoneNumber = entryPhoneNumber.get()

        #This grabs everything from the row


        def popupYes():
            global strPhoneNumber
            sure=True
            c.execute("DELETE FROM tblPhone WHERE phoneNumber = :strPhoneNumber",{'strPhoneNumber':strPhoneNumber})
            popup.destroy()
            conn.commit()


        def popupNo():
            sure=False
            popup.destroy()

        popup = tki.Tk()
        popup.geometry('200x100')
        popup.wm_title("Are you sure?")
        label=tki.Label(popup,text='Are you sure?',font=('Times New Romans',12))
        label.pack(side='top',fill='x')
        buttonYes = tki.Button(popup,text="Yes",command=popupYes)
        buttonNo = tki.Button(popup,text="No",command=popupNo)
        buttonYes.pack()
        buttonNo.pack()
        popup.mainloop()
        conn.commit()       
#============EDIT FUNCTION=========
#These have to be global variables so that they will work within functions.
removeTellToFindLabel = False
TellToFindLabel=tki.Label(text="Find the phone number that you'd like to edit",fg='white',bg='black',font=('Times New Roman',16))
def fnEdit():
    global removeTellToFindLabel
    global entryPhoneNumber
    fnClearEntryBoxes()
    
    if removeTellToFindLabel == True:
        EditWhatLabel.place_forget()

    #ask the user to type in the phone number in which they would like to edit.
    entries()
    btnFindToEdit=tki.Button(window,text='Find it then edit', height = 4, width = 15, command = lambda:find_in_db())
    btnFindToEdit.place(x=20,y=320)
    

    TellToFindLabel.place(x=200,y=300)

    removeTellToFindLabel = True
    
    btnFindToEdit=tki.Button(window,text='Find it then edit', height = 4, width = 15, command = lambda:find_in_db())
    btnFindToEdit.place(x=20,y=320)
    
    conn.commit()

#========FIND FUNCTION============
def fnFind():
    TellToFindLabel.place_forget()
    if removeTellToFindLabel == True:
        fnClearEntryBoxes()
        EditWhatLabel.place_forget()
    global entryPhoneNumber
    entries()
    fnClearEntryBoxes()
    btnSave=tki.Button(window,text='Find it', height = 4, width = 15, command = lambda:find_in_db())
    btnSave.place(x=20,y=320)
    conn.commit()
    


#============FOR FIND AND EDIT=============

def find_in_db():
    #Edit function
    global removeTellToFindLabel
    if removeTellToFindLabel == True:
        print(removeTellToFindLabel)
        #place_forget removed the label
        TellToFindLabel.place_forget()
        

        EditWhatLabel.place(x=200,y=300)
        
        btnFindToEdit=tki.Button(window,text='Confirm Edit', height = 4, width = 15, command = lambda:edit_in_db())
        btnFindToEdit.place(x=20,y=320)
        #=============ACTUAL EDITING FUNCTION===============
        def edit_in_db():
            strFirstName = entryFirstName.get()
            strLastName = entryLastName.get()
            strEmail = entryEmail.get()
            strPhoneNumber = entryPhoneNumber.get()

            print(strFirstName)
            print(strLastName)
            print(strEmail)
            print(strPhoneNumber)

            #If the string does not match the value in the database,
            #then update the database
            if strFirstName != getFirstName:
                #c.execute("UPDATE tblPhone SET firstName=:strFirstName", {'strFirstName':strFirstName})
                c.execute("UPDATE tblPhone SET firstName=:strFirstName WHERE phoneNumber = :strPhoneNumber", {'strFirstName':strFirstName,'strPhoneNumber':strPhoneNumber})

            elif strLastName != getLastName:
               c.execute("UPDATE tblPhone SET lastName=:strLastName WHERE phoneNumber = :strPhoneNumber", {'strLastName':strLastName,'strPhoneNumber':strPhoneNumber})
            
            elif strEmail != getEmail:
               c.execute("UPDATE tblPhone SET eMail=:strEmail WHERE phoneNumber = :strPhoneNumber", {'strEmail':strEmail,'strPhoneNumber':strPhoneNumber})

            elif strPhoneNumber != getPhoneNumber:
               c.execute("UPDATE tblPhone SET phoneNumber=:strPhoneNumber WHERE phoneNumber = :strPhoneNumber", {'strPhoneNumber':strPhoneNumber,'strPhoneNumber':strPhoneNumber})
   
            conn.commit()
            
    global entryPhoneNumber
    strPhoneNumber = entryPhoneNumber.get()

    #This grabs everything from the table
    c.execute("SELECT * FROM tblPhone WHERE phoneNumber = :strPhoneNumber",{'strPhoneNumber':strPhoneNumber})
    #turns the line above into a variable
    aaa = c.fetchone()
    #shows everything inside of that database
    num = 0
    
    getFirstName=aaa[0]
    getLastName=aaa[1]
    getEmail=aaa[2]
    #getPhoneNumber=aaa[3]
    
    entryFirstName.insert(0,getFirstName)
    entryLastName.insert(0,getLastName)
    entryEmail.insert(0,getEmail)
    #entryPhoneNumber.insert(0,getPhoneNumber)
    
    print("First name:",getFirstName)
    print("Last name:", getLastName)
    print("Email:",getEmail)
    #print("Phone Number:",getPhoneNumber)

#===========SCROLLING FUNCTIONS==========
def fnScrollToVeryFirstRow():
    global count
    count=-1
    entryFirstName.delete(0,'end')
    entryLastName.delete(0,'end')
    entryEmail.delete(0,'end')
    entryPhoneNumber.delete(0,'end')
def fnScrollToVeryLastRow():
    global count
    global hi
    global all_values_count
    count=all_values_count
    fName = hi[count][0]
    lName = hi[count][1]
    eMail = hi[count][2]
    pNumber = hi[count][3]
    entryFirstName.delete(0,'end')
    entryLastName.delete(0,'end')
    entryEmail.delete(0,'end')
    entryPhoneNumber.delete(0,'end')
    entryFirstName.insert(0,fName)
    entryLastName.insert(0,lName)
    entryEmail.insert(0,eMail)
    entryPhoneNumber.insert(0,pNumber)
        
def fnNext():
    '''
    lblAdd.place_forget()
    lblDelete.place_forget()
    lblEdit.place_forget()
    lblDoesNotExist.place_forget()
    lblAlreadyExists.place_forget()
    lblBadName.place_forget()
    lblIncorrectNumber.place_forget()
    lblBad.place_forget()
    '''
    
    global all_values_count
    global hi
    global count

    if count >= all_values_count:
        return None
    else:
        count+=1
        fName = hi[count][0]
        lName = hi[count][1]
        eMail = hi[count][2]
        pNumber = hi[count][3]
        entryFirstName.delete(0,'end')
        entryLastName.delete(0,'end')
        entryEmail.delete(0,'end')
        entryPhoneNumber.delete(0,'end')
        entryFirstName.insert(0,fName)
        entryLastName.insert(0,lName)
        entryEmail.insert(0,eMail)
        entryPhoneNumber.insert(0,pNumber)

def fnPrevious():
    '''
    lblAdd.place_forget()
    lblDelete.place_forget()
    lblEdit.place_forget()
    lblDoesNotExist.place_forget()
    lblAlreadyExists.place_forget()
    lblBadName.place_forget()
    lblIncorrectNumber.place_forget()
    lblBad.place_forget()
    '''
    
    global all_values_count
    global hi
    global count

    if count!=-1:
        count-=1


    if count == -1:
        entryFirstName.delete(0,'end')
        entryLastName.delete(0,'end')
        entryEmail.delete(0,'end')
        entryPhoneNumber.delete(0,'end')
    else:
        fName = hi[count][0]
        lName = hi[count][1]
        eMail = hi[count][2]
        pNumber = hi[count][3]
        entryFirstName.delete(0,'end')
        entryLastName.delete(0,'end')
        entryEmail.delete(0,'end')
        entryPhoneNumber.delete(0,'end')
        entryFirstName.insert(0,fName)
        entryLastName.insert(0,lName)
        entryEmail.insert(0,eMail)
        entryPhoneNumber.insert(0,pNumber)    
#========ENTRIES=========
entryFirstName=tki.Entry(window,fg='black',width=30,bg='white',font=('Times New Roman',16),justify='left')

entryLastName=tki.Entry(window,fg='black',width=30,bg='white',font=('Times New Roman',16),justify='left')

entryEmail=tki.Entry(window,fg='black',width=30,bg='white',font=('Times New Roman',16),justify='left')

entryPhoneNumber=tki.Entry(window,fg='black',width=30,bg='white',font=('Times New Roman',16),justify='left')

#========ADDS THE ENTRIES========
def entries():
    entryFirstName.place(x=340,y=80)
    entryLastName.place(x=340,y=120)
    entryEmail.place(x=340,y=160)
    entryPhoneNumber.place(x=340,y=200)
        
    fNameLabel=tki.Label(text="First Name",fg='white',bg='black',font=('Times New Roman',16))
    fNameLabel.place(x=200,y=80)
    lNameLabel=tki.Label(text="Last Name",fg='white',bg='black',font=('Times New Roman',16))
    lNameLabel.place(x=200,y=120)
    eMailLabel=tki.Label(text="e-Mail",fg='white',bg='black',font=('Times New Roman',16))
    eMailLabel.place(x=200,y=160)
    phoneNumberLabel=tki.Label(text="Phone Number",fg='white',bg='black',font=('Times New Roman',16))
    phoneNumberLabel.place(x=200,y=200)


#======BUTTONS==============
btnAdd=tki.Button(window,text='Add', height = 4, width = 15, command = lambda:fnAdd())
btnAdd.place(x=20,y=10)

btnDelete=tki.Button(window,text='Delete', height = 4, width = 15, command = lambda:fnDelete())
btnDelete.place(x=20,y=85)

btnEdit=tki.Button(window,text='Edit', height = 4, width = 15, command = lambda:fnEdit())
btnEdit.place(x=20,y=160)

btnFind=tki.Button(window,text='Find', height = 4, width = 15, command = lambda:fnFind())
btnFind.place(x=20,y=240)


btnScrollToFirst=tki.Button(window,text='|<', height = 0, width = 5, command = lambda:fnScrollToVeryFirstRow())
btnScrollToFirst.place(x=280,y=360)
    
btnScrollToLeft=tki.Button(window,text='<', height = 0, width = 5, command = lambda:fnPrevious())
btnScrollToLeft.place(x=350,y=360)

btnScrollToRight=tki.Button(window,text='>', height = 0, width = 5, command = lambda:fnNext())
btnScrollToRight.place(x=440,y=360)

btnScrollToLast=tki.Button(window,text='>|', height = 0, width = 5, command = lambda:fnScrollToVeryLastRow())
btnScrollToLast.place(x=510,y=360)

sure=False

count=-1
c.execute("SELECT * FROM tblPhone")
hi = c.fetchall()
all_values_count = len(hi)-1

window.mainloop()
