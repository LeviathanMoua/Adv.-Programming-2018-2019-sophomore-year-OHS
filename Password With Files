'''
Instructions from your teacher:
Students will modify their password program in the following ways:
1. Replace the list of old passwords with a file of old passwords (will need to write them to a text file).
2. Read the text file when a user attempts to create a password.  Confirm that their new password has never been used.
3. Upon successfully creating a new password, append the old password text file.
'''
import colorama
from colorama import Fore 
import string
import re
acceptpass = False 
acceptpass = True
invalidChars = set


tFile = open("used_passwords.txt", 'a')

tFile.write("\nabcdeF!23")
tFile.write("\n\n")

tFile.write("zxcbhK#44")
tFile.write("\n\n")

tFile.write("poiuyT&11")
tFile.write("\n\n")

tFile.close()


#This checks to see if the password has numbers
def hasNumbers(password):
  return any(char.isdigit() for char in password)
  
#THis checks to see if the password has any alpha characters.
def hasChar(password):
  return any(char.isalpha() for char in password)

def error_checklist():
  print(Fore.RED + "Error Checklist:")

  error_checklist_1 = (Fore.MAGENTA +  "Passwords do not match!")
  error_checklist_2 = (Fore.MAGENTA + "You need lettters")
  error_checklist_3 = (Fore.MAGENTA + "You need at least 6 letters!")
  error_checklist_4 = (Fore.MAGENTA + "You need uppercase and lowercase letters!")
  error_checklist_5 = (Fore.MAGENTA + "You need digits!")
  error_checklist_6 = (Fore.MAGENTA +  "You need more than two digits!")
  error_checklist_7 = (Fore.MAGENTA +  "You can't reuse a password!")

  cyan_error_chklist_num1 = (Fore.CYAN + "1)")
  cyan_error_chklist_num2 = (Fore.CYAN + "\n2)")
  cyan_error_chklist_num3 = (Fore.CYAN + "\n3)")
  cyan_error_chklist_num4 = (Fore.CYAN + "\n4)")
  cyan_error_chklist_num5 = (Fore.CYAN + "\n5)")
  cyan_error_chklist_num6 = (Fore.CYAN + "\n6)")
  cyan_error_chklist_num7 = (Fore.CYAN + "\n7)")
    
  example_4_chklist_1 = (Fore.WHITE + " \nUSE: Example12! USE: Pemdas21!\n")
  example_4_chklist_2 = (Fore.WHITE + " \nUSE: 12!\n")
  example_4_chklist_3 = (Fore.WHITE + " \nUSE: Apple00$\n")
  example_4_chklist_4 = (Fore.WHITE + " \nUSE: HELUIM2@ OR USE: heluim2@\n")
  example_4_chklist_5 = (Fore.WHITE + " \nUSE: Example!\n")
  example_4_chklist_6 = (Fore.WHITE + " \nUSE: Numbers1@\n")
  example_4_chklist_7 = (Fore.WHITE + " \nUSE: abcdeF!23 OR zxcbhK#44 OR poiuyT&11\n")
  print(Fore.CYAN + cyan_error_chklist_num1 + error_checklist_1 + example_4_chklist_1 + cyan_error_chklist_num2 + error_checklist_2 + example_4_chklist_2 + cyan_error_chklist_num3 + error_checklist_3 + example_4_chklist_3 + cyan_error_chklist_num4 + error_checklist_4 + example_4_chklist_4 + cyan_error_chklist_num5 + error_checklist_5 + example_4_chklist_5 + cyan_error_chklist_num6 + error_checklist_6 + example_4_chklist_6 + cyan_error_chklist_num7 + error_checklist_7 + example_4_chklist_7)

def passsword():
  
  print(" ")
  print(Fore.WHITE + "==================================================================\nSCROLL UP FOR ERROR CHECKLIST!!!!")
  print(Fore.YELLOW+"Password")
  print(Fore.RED+"Your password Must contain:\n1. At least 2 digits and 6 alpha characters\n2. Has lower case and upper case letters.\n3. Has numbers and letters.\n4. Has 1 Special characters\n5. Must not match any used passwords")
  
  print(Fore.CYAN+"Password:")
  
  first = input(Fore.WHITE+"")

  print(Fore.CYAN+"Enter password again:")

  recheck_first = input(Fore.WHITE + " ")
  
  
  def funPass():  
    lstSpecial= ("[@_!#$%^&*()<>?/\|}{~:]")

    numbers = ['0','1','2','3','4','5','6','7','8','9']

    invalidChars = set(string.punctuation.replace("_", ""))

    lstUsedPasswords=["abcdeF!23","zxcbhK#44","poiuyT&11"]

    regex = re.compile(lstSpecial)

    d=0

    l=0
    for c in first:
        if c.isdigit():
            d=d+1
        elif c.isalpha():
            l=l+1
        else:
            pass




    
    if hasChar(first and recheck_first) == False:
        print(Fore.RED + "You need letters!")
        passsword()
    
    elif l < 6:
          print(Fore.RED + "You need at least 6 letters!")
          passsword()

    elif first.isupper() and recheck_first.isupper() or first.islower() and recheck_first.islower():
          print(Fore.RED + "You need upper and lower case letters. ")
          passsword()

    elif hasNumbers(first and recheck_first) == False:
          print(Fore.RED + "You need digits")
          passsword()

    elif d < 2:
      print(Fore.RED + "You need more than two digits!")
      passsword()

    elif (regex.search(first) == None):
      print("You need special characters!")
      passsword()

    elif first == recheck_first:
      if acceptpass == True:
        with open("used_passwords.txt", 'r') as tFile:
          for line in tFile:
            if first != line and first+"\n" != line:
              some_variable = True
            else:  #If it equals anything else from the file, then false
              some_variable = False
              break

        print(some_variable)

        tFile = open("used_passwords.txt", 'a')
        if some_variable == True:
          tFile.write("\n" + first)
          print("\nGOOD! Password does not match old ones!")

        elif some_variable == False:
          print("\nYou can not re-use a password!\n==============================")   
          passsword()
          

           #ENTER HERE 
    else:
      print(Fore.RED + "Passwords do not match!!! Please retype your password")
      print(Fore.WHITE + "==================================================================")
      passsword()
      
  funPass()


def control_center():
  error_checklist()

  passsword()
control_center()

